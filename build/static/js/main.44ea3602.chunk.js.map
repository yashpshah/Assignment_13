{"version":3,"sources":["Filters.js","ProductRow.js","ProductTable.js","ProductForm.js","Products.js","App.js","serviceWorker.js","index.js"],"names":["Filters","props","handleChange","bind","e","value","target","name","this","onFilter","type","className","placeholder","onChange","Component","ProductRow","destroy","edit","onEdit","product","id","onDestroy","category","price","instock","onClick","ProductTable","handleEdit","handleDestroy","productsArray","products","rows","forEach","indexOf","filterText","push","key","RESET_VALUES","productid","ProductForm","handleSave","handleReset","state","errors","setState","prevState","preventDefault","onSave","onSubmit","required","checked","htmlFor","PRODUCTS","Products","currProduct","handleFilter","getProducts","fetch","then","res","json","success","alert","message","data","filterInput","body","JSON","stringify","method","headers","catch","err","console","error","productId","find","p","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.44ea3602.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass Filters extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    handleChange(e) {\r\n        const value = e.target.value\r\n        const name = e.target.name\r\n\r\n        this.props.onFilter({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <form>\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"form-control\" \r\n                    placeholder=\"Search...\" \r\n                    name=\"filterText\" \r\n                    onChange={this.handleChange}></input>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Filters","import React, { Component } from 'react'\r\n\r\nclass ProductRow extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.destroy = this.destroy.bind(this)\r\n\t\tthis.edit = this.edit.bind(this)\r\n\t}\r\n\r\n\tedit() {\r\n\t\tthis.props.onEdit(this.props.product.id);\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\tthis.props.onDestroy(this.props.product.id);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { product } = this.props.product;\r\n\t\treturn (\r\n\t\t\t<tr>\r\n\t\t\t\t<td>{product.name}</td>\r\n\t\t\t\t<td>{product.category}</td>\r\n\t\t\t\t<td>{product.price}</td>\r\n\t\t\t\t<td>{(product.instock) ? \"Yes\" : \"No\"}</td>\r\n\t\t\t\t<td className=\"text-right\">\r\n\t\t\t\t\t<button onClick={this.edit} className=\"btn btn-warning mr-2\">Edit</button>\r\n\t\t\t\t\t<button onClick={this.destroy} className=\"btn btn-danger\">Delete</button>\r\n\t\t\t\t</td>\r\n\t\t\t</tr>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default ProductRow","import React, { Component } from 'react'\r\nimport ProductRow from './ProductRow'\r\n\r\nclass ProductTable extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleEdit = this.handleEdit.bind(this)\r\n        this.handleDestroy = this.handleDestroy.bind(this)\r\n    }\r\n\r\n    handleEdit(id) {\r\n        this.props.onEdit(id)\r\n    }\r\n\r\n    handleDestroy(id) {\r\n        this.props.onDestroy(id)\r\n    }\r\n    \r\n    render () {\r\n        let productsArray = this.props.products;\r\n        let rows = []\r\n\r\n        productsArray.forEach((product) => {\r\n            if (product.product.name.indexOf(this.props.filterText) === -1) {\r\n                return\r\n            }\r\n            rows.push (\r\n                <ProductRow \r\n                    product={product} \r\n                    key={product.id} \r\n                    onEdit={this.handleEdit}\r\n                    onDestroy={this.handleDestroy}></ProductRow>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                <table className=\"table table-striped table-sm\">\r\n                    <thead className=\"thead-dark\">\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Category</th>\r\n                            <th>Price</th>\r\n                            <th>Instock</th>\r\n                            <th>&nbsp;</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {rows}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProductTable","import React, { Component } from 'react'\r\n\r\nconst RESET_VALUES = { productid: null, category: '', price: '', name: '', instock: null }\r\n\r\nclass ProductForm extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.handleChange = this.handleChange.bind(this)\r\n\t\tthis.handleSave = this.handleSave.bind(this)\r\n\t\tthis.handleReset = this.handleReset.bind(this)\r\n\t\tthis.state = {\r\n\t\t\tproduct: (this.props.product && this.props.product.product) || RESET_VALUES,\r\n\t\t\terrors: {}\r\n\t\t}\t\r\n\t}\r\n\r\n\thandleChange(e) {\r\n\t\tconst target = e.target\r\n\t\tconst name = target.name\r\n\t\tconst value = (name === \"instock\") ? (target.value === \"true\") : target.value\r\n\r\n\t\tthis.setState((prevState) => {\r\n\t\t\tprevState.product[name] = value\r\n\t\t\treturn { product: prevState.product }\r\n\t\t})\r\n\t}\r\n\r\n\thandleSave(e) {\r\n\t\te.preventDefault();\r\n\t\tthis.props.onSave(this.state.product);\r\n\t\tthis.handleReset();\r\n\t}\r\n\r\n\thandleReset() {\r\n\t\tthis.setState({\r\n\t\t\tproduct: RESET_VALUES\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { product } = this.state;\r\n\t\treturn (\r\n\t\t\t<form onSubmit={this.handleSave}>\r\n\t\t\t\t<h4>{ ((product.productid != null) ? \"Edit the existing product\" : \"Add a new product\") }</h4>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<label>Name <br />\r\n\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" name=\"name\" onChange={this.handleChange} value={product.name} required />\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<label>Category <br />\r\n\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" name=\"category\" onChange={this.handleChange} value={product.category} required />\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<label>Price <br />\r\n\t\t\t\t\t\t<input type=\"number\" className=\"form-control\" name=\"price\" onChange={this.handleChange} value={product.price} required />\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</p>\r\n\t\t\t\t<label className=\"d-block mb-3\">\r\n\t\t\t\t\tIn stock <br />\r\n\t\t\t\t\t<div className=\"form-check form-check-inline\">\r\n\t\t\t\t\t\t<input className=\"form-check-input\" type=\"radio\" name=\"instock\" id=\"yes\" onChange={this.handleChange} value=\"true\" checked={(product.instock === true)} required />\r\n\t\t\t\t\t\t<label className=\"form-check-label\" htmlFor=\"yes\">Yes</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-check form-check-inline\">\r\n\t\t\t\t\t\t<input className=\"form-check-input\" type=\"radio\" name=\"instock\" id=\"no\" onChange={this.handleChange} value=\"false\" checked={(product.instock === false)} required />\r\n\t\t\t\t\t\t<label className=\"form-check-label\" htmlFor=\"no\">No</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</label>\r\n\t\t\t\t<input type=\"submit\" className=\"btn btn-info mr-2\" value=\"Save\"></input>\r\n\t\t\t\t<input type=\"reset\" onClick={this.handleReset} className=\"btn btn-danger\" value=\"Clear\"></input>\r\n\t\t\t</form>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default ProductForm","import React, { Component } from 'react'\r\nimport Filters from './Filters'\r\nimport ProductTable from './ProductTable'\r\nimport ProductForm from './ProductForm'\r\n\r\nlet PRODUCTS = [];\r\n\r\nconst base = \"\";\r\n\r\nclass Products extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            filterText: '',\r\n\t\t\tproducts: PRODUCTS,\r\n\t\t\tcurrProduct: null\r\n        }\r\n        this.handleFilter = this.handleFilter.bind(this)\r\n        this.handleEdit = this.handleEdit.bind(this)\r\n        this.handleDestroy = this.handleDestroy.bind(this)\r\n        this.handleSave = this.handleSave.bind(this)\r\n\t}\r\n\t\r\n\tcomponentDidMount() { this.getProducts() }\r\n\r\n\tgetProducts() {\r\n\t\tfetch(base + \"/products/get\")\r\n\t\t.then((res) => res.json())\r\n\t\t.then((res) => {\r\n\t\t\tif (res.success === 0) return alert(res.message);\r\n\t\t\tthis.setState({ products: res.data })\r\n\t\t})\r\n\t}\r\n\r\n    handleFilter(filterInput) {\r\n        this.setState(filterInput)\r\n    }\r\n\r\n    handleSave(product) {\r\n\t\tif (product.productid != null) {\r\n\t\t\t// Update Product\r\n\r\n\t\t\tfetch(base + \"/products/update/\" + product.productid, {\r\n\t\t\t\tbody: JSON.stringify(product),\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {'Content-Type': 'application/json'}\r\n\t\t\t})\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif(res.success === 0) return alert(res.message);\r\n\t\t\t\tthis.getProducts();\r\n\t\t\t})\r\n\t\t\t.catch(err => console.error(err))\r\n\t\t} else {\r\n\t\t\t// Create Product\r\n\r\n\t\t\tfetch(base + \"/products/create\", {\r\n\t\t\t\tbody: JSON.stringify(product),\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {'Content-Type': 'application/json'}\r\n\t\t\t})\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif(res.success === 0) return alert(res.message);\r\n\t\t\t\tthis.getProducts();\r\n\t\t\t})\r\n\t\t\t.catch(err => console.error(err))\r\n\t\t}\r\n    }\r\n\r\n\thandleEdit(productId) {\r\n\t\tlet currProduct = this.state.products.find(p => p.id === productId);\r\n\t\tthis.setState({\r\n\t\t\tcurrProduct: currProduct\r\n\t\t})\r\n\t}\r\n\r\n    handleDestroy(productId) {\r\n\t\tfetch(base + \"/products/delete/\" + productId)\r\n\t\t.then((res) => res.json())\r\n\t\t.then((res) => {\r\n\t\t\tif (res.success === 0) return alert(res.message);\r\n\t\t\tthis.getProducts();\r\n\t\t})\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                <h1>My Inventory</h1>\r\n                <Filters \r\n                    onFilter={this.handleFilter}></Filters>\r\n                <ProductTable \r\n                    products={this.state.products}\r\n                    filterText={this.state.filterText}\r\n                    onEdit={this.handleEdit}\r\n                    onDestroy={this.handleDestroy}></ProductTable>\r\n                <ProductForm\r\n\t\t\t\t\tkey={this.state.currProduct}\r\n\t\t\t\t\tproduct={this.state.currProduct}\r\n                    onSave={this.handleSave}></ProductForm>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Products","import React from 'react';\nimport Products from './Products'\n\nfunction App() {\n  return (\n    <div>\n      <Products></Products>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}